# 0.9 release
* comment on https://pivotallabs.com/users/alex/blog/articles/1029-why-wouldn-t-you-use-erector-
* comment on http://www.quora.com/Why-dont-more-people-use-Erector?srid=uJ6p
* announce on
  * http://www.rubyflow.com/
  * Pivotal Blabs
  * ruby-talk
  * ruby-6

# Web Site
* add "fork me on github" badge
* make chunky Erector logo png transparent
* give rdoc pages the web site header
* maybe redesign a la http://thoughtbot.com/bourbon/

# Documentation
* caching
* externals (rename extras)
* rails
* use braces over do..end
* move docs to github pages (?)

# Technical
* use rvm to test locally under 1.8.6/1.8.7
* change all instance vars to start with @_
* depends_on FooWidget, BarWidget (add all of these widgets' dependencies)
* unify :script and :js, :style and :css
* rename 'css' convenience method to 'css_link' method, or otherwise remove confusion between inline and linked css
* rename External to Extra since it's more descriptive
  * make Extras just be more like a regular widget somehow

* make render switch inside ExternalRenderer

        class FooWidget < Widget
          depends_on "jquery.js", :render => :link
          depends_on "foo.js"
          depends_on "bar.js"
        end

        ExternalRenderer.default_render = :embed


* pluggable renderer e.g.
        class JavaScriptRenderer < Widget
          def content
            if @external.options[:render] == :embed
              javascript @external.options do
                rawtext @external.text
              end
            else
              script({:type => "text/javascript", :src => @external.text}.merge(@external.options))
            end
          end
        end

        ExternalRenderer.renderer_for(:js, JavaScriptRenderer)

* dot-class and bang-id
* rename Cache to WidgetCache
* use Moneta for WidgetCache
  * should give us couchdb, memcache, etc. caching
* better sass support (via extras)
* haml support
* XML widget
* dynamic widget (use method_missing so unknown messages become tags)
* pass multiple args to an element method, including promises so they can be rewound and rerendered later. Merge this with "join" method.
* deprecate "join" since "text" now takes an array
* alias "text" to "emit"?
  * (some XML docs have a "Text" element)
* work with Sprockets https://github.com/sstephenson/sprockets/
* work with Rails 3.1 http://weblog.rubyonrails.org/2011/5/22/rails-3-1-release-candidate
* rename _render to emit?
* split up html_spec.rb into different specs per mixin
* scss, js, jquery, sass, css, style ... clarify inline vs. link semantics, also file path/root (web vs. filesystem)
* http://test.rubygems.org/
